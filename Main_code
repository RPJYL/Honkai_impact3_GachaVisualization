<html>
  <head lang="en">
  </head>
  <body>
    <table>
      <tbody>
        <th>
          <td>UP武器</td><td>UP圣痕</td><td>UP外武器</td><td>UP外圣痕</td>
        </th>
        <tr>
          <td>想要</td>
          <td><input type="text" name="wish" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="wish" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="wish" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="wish" onfocus="this.select()" value="0"></td>
        </tr>
        <tr>
          <td>还可以接受</td>
          <td><input type="text" name="norm" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="norm" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="norm" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="norm" onfocus="this.select()" value="0"></td>
        </tr>
        <tr>
          <td>共鸣+1000</td>
          <td><input type="text" name="pity" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="pity" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="pity" onfocus="this.select()" value="0"></td>
          <td><input type="text" name="pity" onfocus="this.select()" value="0"></td>
        </tr>
      </tbody>
    </table>
    <p>注：圣痕以件为单位。
      <br/>一般概率：UP武器<b>2.479</b>%，UP圣痕<b>1.240</b>%，UP外武器<b>0.413</b>%，UP外圣痕<b>0.410</b>%。
      <br/>一般数量：UP武器1件，UP圣痕3件，UP外武器6件，UP外圣痕12件。
    </p>
    <button id="submit" onclick="draw()">生成</button>
    <br/>

    <canvas id="pie" width="450" height="250">
    </canvas>
    <script>
      //求和，计算百分比
      function sumData(data) {
        let res = 0;
        for (let i = 0; i < data.length; i++) {
          res += data[i];
        }
        return res;
      }
      //对文本框求和
      function sumInput(name) {
        let obj = document.getElementsByName(name), sum = 0, weight = [0.02479, 0.01240, 0.00413, 0.00410];
        for (let i = 0; i < obj.length; i++) {
          sum += obj[i].value * weight[i];
        }
        return sum; 
      }

      //作图函数
      function draw() {
        let pie = document.getElementById("pie"),
        datasets = {
          colors: ["red", "green", "black"],
          //颜色
          labels: ["想要", "还可以接受", "共鸣+1000"],
          //标签
          values: [sumInput("wish"), sumInput("norm"), sumInput("pity")],
          //值
          x: 125,
          //圆心x坐标
          y: 125,
          //圆心y坐标
          radius: 100 //半径
        };
        pieChart(pie, datasets); //画饼状图

        /* elem:要操作的画布元素
         * data:所需格式的数据*/
        function pieChart(elem, data) {
          if (elem.getContext) {            
            let ctx = elem.getContext("2d"),
            vdata = data.values,
            //绘图数据
            sum = sumData(vdata),
            //对绘图数据求和，用于计算百分比
            startangle = 0,
            //绘制扇形的开始角度
            labels = data.labels,
            //绘图的对应文字
            x = data.x,
            //圆心x坐标
            y = data.y,
            //圆心y坐标
            rad = data.radius,
            //圆半径
            x1 = x + rad + 30,
            //绘制右侧文字和标注的x坐标
            y1 = y - rad,
            //绘制右侧文字和标注的y坐标
            endangle; //绘制扇形的结束角度
            ctx.clearRect(0,0,450,250) //清理画布
            for (let i = 0,
            len = vdata.length; i < len; i++) {
              //绘制饼图
              //计算下一次绘制扇形的结束角度，即根据绘制数据占有总数据和的比例求的弧度
              let percent = vdata[i] / sum;
              endangle = startangle - Math.PI * 2 * (percent);
              ctx.beginPath(); //开始绘制新路径
              ctx.fillStyle = data.colors[i]; //绘制颜色
              ctx.moveTo(x, y); //移动到圆心(注：画饼图一定要回到圆心，不然会有问题)
              ctx.arc(x, y, rad, startangle, endangle, true); //逆时针画扇形
              //绘制右侧文字和标注
              ctx.moveTo(x1, y1); //移动到绘制文字和标注的位置
              ctx.fillRect(x1, y1, 30, 14); //绘制矩形表示比列图
              //计算四舍五入后的扇形每份的百分比
              let perc = (percent * 100).toFixed(2) + "%"; //tofixed()自动四舍五入返回指定小数位数的字符串
              //设置绘制文字的属性
              ctx.font = "12px microsoft yahei";
              ctx.txtalgin = "center";
              ctx.textBaseline = "top";
              //绘制文字
              ctx.fillText(labels[i] + ": " + perc, x1 + 35, y1);
              ctx.fill(); //指定颜色填充以上绘制
              startangle = endangle; //下一次绘制扇形的开始角度
              y1 += 20; //下一次绘制文字和标注的y坐标
            }
          }
        }
      }
    </script>
  </body>

</html>
